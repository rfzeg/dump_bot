<?xml version="1.0"?>
<robot>
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
    	<!-- topic name on which to publish the linear and angular velocity of the robot -->
        <commandTopic> cmd_vel </commandTopic>
	<odometryTopic> odom </odometryTopic>
	<odometryFrame> odom </odometryFrame>
	<odometrySource> world </odometrySource>
	<publishOdomTF> true </publishOdomTF>
	<robotBaseFrame> robot_footprint </robotBaseFrame>
	<publishWheelTF> false </publishWheelTF>
	<publishTf> true </publishTf>
	<publishWheelJointState> true </publishWheelJointState>
	<legacyMode> false </legacyMode>
	<updateRate> 10 </updateRate> <!-- frequency in (Hz) published by the plugin -->
	<leftJoint> left_wheel_hinge </leftJoint>
	<rightJoint> right_wheel_hinge </rightJoint>
	<wheelSeparation> 0.6 </wheelSeparation>
	<wheelDiameter> 0.3 </wheelDiameter>
	<wheelAcceleration> 1  </wheelAcceleration>
	<wheelTorque> 20 </wheelTorque>
	<rosDebugLevel> na </rosDebugLevel> <!-- <rosDebugLevel>Debug</rosDebugLevel> -->
    </plugin>
  </gazebo>

  <gazebo reference="camera">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>dumpster/camera1</cameraName> <!-- namespaces to avoid collision with other topics -->
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize> <!-- When true, a semi-translucent laser ray is displayed within the scanning zone of the laser -->
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/dumpster/laser/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- chassis -->
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- left_wheel -->
  <gazebo reference="left_wheel">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- right_wheel -->
  <gazebo reference="right_wheel">
    <material>Gazebo/Grey</material>
  </gazebo>

 <!-- dump_box -->
 <gazebo reference="dump_box">
    <material>Gazebo/Orange</material>
  </gazebo>

 <!-- plastic_bin -->
 <gazebo reference="plastic_bin">
    <material>Gazebo/Yellow</material>
  </gazebo>

 <!-- laser_pole -->
 <gazebo reference="laser_pole">
    <material>Gazebo/Green</material>
  </gazebo>

 <!-- camera -->
 <gazebo reference="camera">
    <material>Gazebo/Red</material>
  </gazebo>



</robot>
